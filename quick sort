#include <stdio.h>
#include <stdlib.h>
void quicksort(int a[],int l,int r){
    if(l<r){
        int pivot=partition(a,l,r);
        quicksort(a,l,pivot-1);
         quicksort(a,pivot+1,r);
    }
}
int partition(int a[],int l,int r){
int  pivot=a[l];
 while(l!=r){
    if(pivot==a[l]){
        if(a[r]>pivot){
            r--;
        }
        else if(a[r]<=pivot){
            int temp= a[r];
            a[r]=a[l];
            a[l]=temp;

        pivot=a[r];
        l++;
    }
    }
    else if(pivot==a[r]){
        if(a[l]<pivot){
            l++;
        }
        else if(a[l]>=pivot){
            int temp= a[r];
            a[r]=a[l];
            a[l]=temp;
            pivot=a[l];
            r--;
            }
    }
 }
 return l;
}

int main()
{
  int a[] = {24,9,29,14,19,27};

  int n=6;

  quicksort(a,0,n-1);
  for(int i=0;i<n;i++){
    printf("%d\n",a[i]);

  }

return 0;
}



OUTPUT:
9
14
19
24
27
29
